[
  
  {
    "title"    : "On zsh, prezto and nerd fonts...",
    "category" : "",
    "tags"     : " terminal, zsh, prezto, iterm2",
    "url"      : "/blog/2020/06/10/my-terminal-setup.html",
    "date"     : "June 10, 2020",
    "excerpt"  : "\nYay! So I switched job and got a new MacBook Pro. Good excuse to refresh my development (and terminal) setup. I have been using bash along with completion and git-prompt for as long as I can remember, this time I decided to cast my net wider and ...",
  "content"  : "\nYay! So I switched job and got a new MacBook Pro. Good excuse to refresh my development (and terminal) setup. I have been using bash along with completion and git-prompt for as long as I can remember, this time I decided to cast my net wider and see what that world has been up to since I last spend time on this.\n\n\nzsh, prezto\n\n\nI&amp;#8217;m sticking to iTerm2 as my preferred terminal application. As for the shell, I decided to take a look at zsh, seeing that it&amp;#8217;s now the default shell with MacOS Catalina. I also wanted capabilities such as auto-completion, git integration - without a lot of effort ;-). After a bit of googling and reading, I picked prezto as my zsh configuration framework.\n\n\n\n\ninstalling the tools\n\n\nInstalling iterm2 is simple with homebrew:\n\n\n\nbrew cask install iterm2\n\n\n\nZsh that comes with MacOS Catalina is quite current (v5.7.1), so I&amp;#8217;ll just use the OS supplied version.\n\n\nNext, install prezto with the following commands:\n\n\n\ngit clone --recursive https://github.com/sorin-ionescu/prezto.git &amp;quot;${ZDOTDIR:-$HOME}/.zprezto&amp;quot;\n\n\n\nAlternatively, you can install from my fork which contains my modified theme:\n\n\n\ngit clone --recursive https://github.com/naikoob/prezto.git &amp;quot;${ZDOTDIR:-$HOME}/.zprezto&amp;quot;\n\n\n\nfollowed by\n\n\n\nsetopt EXTENDED_GLOB\nfor rcfile in &amp;quot;${ZDOTDIR:-$HOME}&amp;quot;/.zprezto/runcoms/^README.md(.N); do\n  ln -s &amp;quot;$rcfile&amp;quot; &amp;quot;${ZDOTDIR:-$HOME}/.${rcfile:t}&amp;quot;\ndone\n\n\n\n\n\ntinkering\n\n\nFirst, edit the modules section of ~/.zpreztorc to enable the desired modules. I&amp;#8217;ve added a couple of modules as highlighted below:\n\n\n\n# Set the Prezto modules to load (browse modules).\n# The order matters.\nzstyle &#39;:prezto:load&#39; pmodule \\\n  &#39;environment&#39; \\\n  &#39;terminal&#39; \\\n  &#39;editor&#39; \\\n  &#39;history&#39; \\\n  &#39;directory&#39; \\\n  &#39;spectrum&#39; \\\n  &#39;utility&#39; \\\n  &#39;ssh&#39; \\ (1)\n  &#39;completion&#39; \\\n  &#39;git&#39; \\ (2)\n  &#39;syntax-highlighting&#39; \\ (3)\n  &#39;history-substring-search&#39; \\ (4)\n  &#39;prompt&#39;\n\n\n\n\n\n1\nuseful if you have passphrase protected your keys and/or often ssh over a bastion hosts\n\n\n2\nshows git information on your prompt\n\n\n3\neh&amp;#8230;&amp;#8203; syntax highlighting? Well, actually this also does syntax checking as you type\n\n\n4\nenable searching through command history using ctrl-r\n\n\n\n\n\n\nthemes\n\n\ntbh, this is a key motivation for me to explore prezto&amp;#8230;&amp;#8203; The fancy prompt don&amp;#8217;t make me a better developer, but it sure makes me look the part ;-)\n\n\nThis is how my prompt looks like:\n\n\n\n\n\n\n\nIt&amp;#8217;s based on the paradox theme that comes with the prezto distribution, and available on my fork here\n\n\nTo use this theme, copy it to ~/zprezto/modules/prompt/functions/prompt_doxxed_setup, and edit ~/.zpreztorc like so:\n\n\n\n# Set the prompt theme to load.\n# Setting it to &#39;random&#39; loads a random theme.\n# Auto set to &#39;off&#39; on dumb terminals.\nzstyle &#39;:prezto:module:prompt&#39; theme &#39;doxxed&#39;\n\n\n\n\n\nnerd fonts and glyphs\n\n\nNotice the branch and chevron symbols in the screenshot above? Those are not in the standard character set, we need a patched/nerd font so that they display properly. You can find patched fonts here or  here. I use the MesloLGS font from here. Just download and install the .ttf files.\n\n\nIf you&amp;#8217;re only using zsh from iTerm2 exclusively, you can skip the fonts and just enable built-in Powerline glyphs in iTerm2, like so:\n\n\n\n\n\n\n\nAnd while you&amp;#8217;re at it, you can change the colour presets as well. I&amp;#8217;m using &#39;Tango Dark&#39; for the screenshot above.\n\n\n\n\n\n\n\nI use iTerm2&amp;#8217;s built-in glyphs in iTerm2 as I feel they render better, and patched/nerd font in Visual Studio Code terminals. Overall, I&amp;#8217;m pretty satisfied with this setup. Hope you find it useful too.\n\n\n&amp;#160;\n\n\n"
} 
  
  
  
]
